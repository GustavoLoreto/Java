
import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import static java.awt.image.ImageObserver.ERROR;
import java.io.OutputStream;
import java.util.Enumeration;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Anonymous
 */
public class Robot_RXTX extends javax.swing.JFrame {

      /*
     - static: indica que se crea una variable unica para todas las instancias.
     * La propiedad Static se encarga de que el
     * valor sea copartido entre las clases
     * En este caso nos interesa que se comparta 
     * con la clase pirncipal Program_20_Static
     - final:  indica que una variable es de tipo constante.
    */
    private static final String  Activar= "0";
    private static final String  Up = "1";
    private static final String  Down = "2";
    private static final String  Left= "3";
    private static final String  Right = "4";
    private static final String  Rl = "5";
    private static final String  Rr = "6";
    private static final String  Auto= "7";
    private static final String  DesActivar= "9";
    private int Flag =0;
    // Variables de comunicacion
    private OutputStream output=null;
    SerialPort serialPort;
    private String PUERTO = "COM1";
    private static final int TIMEOUT=2000;
    private static final int DATA_RATE=9600;
    
    public Robot_RXTX() {
        initComponents();
        inicializarConexion();
        //PUERTO = COMX.getText();
    }
    
        private void inicializarConexion() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        CommPortIdentifier puertoID = null; // Objeto para Identificar el Puerto
        Enumeration puertoEnum = CommPortIdentifier.getPortIdentifiers(); // objeto para enumerar el puerto
        
        while(puertoEnum.hasMoreElements()){ //Mientras tenga mas elementos
            CommPortIdentifier actualPuertoID = (CommPortIdentifier) puertoEnum.nextElement();
            if(PUERTO.equals(actualPuertoID.getName())){
                puertoID = actualPuertoID;
                break;
            }
        }
        
        if(puertoID==null){
            mostrarError("No se puede conectar al puerto");
            System.exit(ERROR);
        }
        
        try{
            serialPort =(SerialPort) puertoID.open(this.getClass().getName(),TIMEOUT);
            serialPort.setSerialPortParams(DATA_RATE, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
            output = serialPort.getOutputStream();
        }
        catch(Exception e){
            mostrarError(e.getMessage());
            System.exit(ERROR);
        }
    }
        
         private void enviarDatos(String datos){
        try{
            output.write(datos.getBytes());
        }
        catch(Exception e){
            mostrarError("ERROR");
            System.exit(ERROR);
        }
    }
    
    public void mostrarError(String mensaje){
        JOptionPane.showInternalMessageDialog(this, mensaje, "ERROR", JOptionPane.ERROR);
    }  
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UP = new javax.swing.JButton();
        DOWN = new javax.swing.JButton();
        LEFT = new javax.swing.JButton();
        RIGHT = new javax.swing.JButton();
        RL = new javax.swing.JButton();
        RR = new javax.swing.JButton();
        AUTO = new javax.swing.JButton();
        COMX = new javax.swing.JTextField();
        BAUDIOS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SALIR = new javax.swing.JButton();
        CONECTAR = new javax.swing.JRadioButton();
        ONOFF = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Robot -> RXTX");
        setBounds(new java.awt.Rectangle(500, 200, 0, 0));
        setResizable(false);

        UP.setText("UP");
        UP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPActionPerformed(evt);
            }
        });

        DOWN.setText("DOWN");
        DOWN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOWNActionPerformed(evt);
            }
        });

        LEFT.setText("LEFT");
        LEFT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LEFTActionPerformed(evt);
            }
        });

        RIGHT.setText("RIGHT");
        RIGHT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RIGHTActionPerformed(evt);
            }
        });

        RL.setText("RL");
        RL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RLActionPerformed(evt);
            }
        });

        RR.setText("RR");
        RR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RRActionPerformed(evt);
            }
        });

        AUTO.setText("AUTO");
        AUTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AUTOActionPerformed(evt);
            }
        });

        jLabel1.setText("PUERTO");

        jLabel2.setText("BAUDIOS");

        SALIR.setText("Salir");
        SALIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SALIRActionPerformed(evt);
            }
        });

        CONECTAR.setText("CONECTAR");
        CONECTAR.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CONECTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CONECTARActionPerformed(evt);
            }
        });

        ONOFF.setText("ROBOT (ON/OFF)");
        ONOFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ONOFFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LEFT, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DOWN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AUTO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RIGHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(COMX, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(BAUDIOS)
                            .addComponent(SALIR, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ONOFF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CONECTAR)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COMX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(UP)
                    .addComponent(RL)
                    .addComponent(RR))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LEFT)
                    .addComponent(RIGHT)
                    .addComponent(BAUDIOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(AUTO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DOWN)
                    .addComponent(SALIR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ONOFF)
                    .addComponent(CONECTAR))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RIGHTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RIGHTActionPerformed
        enviarDatos(Right);
    }//GEN-LAST:event_RIGHTActionPerformed

    private void CONECTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CONECTARActionPerformed
        // TODO add your handling code here:
        PUERTO = COMX.getText();

        if((COMX.getText().equals(""))){
            JOptionPane.showMessageDialog(null,"Debe indicar el Puerto: COM ");
            //CONECTAR.setEnabled(false);
            CONECTAR.setSelected(false);
        }
        else{ 
            if(Flag == 0){ //CONECTAR.isSelected()
                inicializarConexion();
                Flag =1;
            }
        }     
    }//GEN-LAST:event_CONECTARActionPerformed

    private void ONOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ONOFFActionPerformed
        // TODO add your handling code here:
        if((COMX.getText().equals(""))){
            JOptionPane.showMessageDialog(null,"Debe indicar el Puerto: COM ");
            ONOFF.setSelected(false);
        }
        else if(Flag==0){
            JOptionPane.showMessageDialog(null,"Seleccione la Opcion CONECTAR ");
            ONOFF.setSelected(false);
        }

        if(ONOFF.isSelected()){          
            enviarDatos(Activar);
        }
        else{
            enviarDatos(DesActivar);
        }
    }//GEN-LAST:event_ONOFFActionPerformed

    private void SALIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SALIRActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_SALIRActionPerformed

    private void UPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPActionPerformed
        enviarDatos(Up);
    }//GEN-LAST:event_UPActionPerformed

    private void DOWNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOWNActionPerformed
        enviarDatos(Down);
    }//GEN-LAST:event_DOWNActionPerformed

    private void LEFTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LEFTActionPerformed
        enviarDatos(Left);
    }//GEN-LAST:event_LEFTActionPerformed

    private void RLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RLActionPerformed
        enviarDatos(Rl);
    }//GEN-LAST:event_RLActionPerformed

    private void RRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RRActionPerformed
        enviarDatos(Rr);
    }//GEN-LAST:event_RRActionPerformed

    private void AUTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AUTOActionPerformed
        enviarDatos(Auto);
    }//GEN-LAST:event_AUTOActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Robot_RXTX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Robot_RXTX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Robot_RXTX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Robot_RXTX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Robot_RXTX().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AUTO;
    private javax.swing.JTextField BAUDIOS;
    private javax.swing.JTextField COMX;
    private javax.swing.JRadioButton CONECTAR;
    private javax.swing.JButton DOWN;
    private javax.swing.JButton LEFT;
    private javax.swing.JRadioButton ONOFF;
    private javax.swing.JButton RIGHT;
    private javax.swing.JButton RL;
    private javax.swing.JButton RR;
    private javax.swing.JButton SALIR;
    private javax.swing.JButton UP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
